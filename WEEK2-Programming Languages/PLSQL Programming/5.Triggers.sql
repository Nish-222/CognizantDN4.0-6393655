-- Scenario 1:
CREATE OR REPLACE TRIGGER UpdateCustomerLastModified
BEFORE UPDATE ON Customers
FOR EACH ROW
BEGIN
:NEW.LastModified:=SYSDATE;
END;
/

-- Scenario 2:
CREATE TABLE AuditLog(
LogID NUMBER GENERATED BY DEFAULT AS IDENTITY,
TransactionID NUMBER,
LogTime DATE DEFAULT SYSDATE
);

CREATE OR REPLACE TRIGGER LogTransaction
AFTER INSERT ON Transactions
FOR EACH ROW
BEGIN
INSERT INTO AuditLog(TransactionID)VALUES(:NEW.TransactionID);
END;
/

-- Scenario 3:
CREATE OR REPLACE TRIGGER CheckTransactionRules
BEFORE INSERT ON Transactions
FOR EACH ROW
DECLARE
v_Bal NUMBER;
BEGIN
SELECT Balance INTO v_Bal FROM Accounts WHERE AccountID=:NEW.AccountID;
IF :NEW.TransactionType='Withdrawal' AND :NEW.Amount>v_Bal THEN
    RAISE_APPLICATION_ERROR(-20004,'Withdrawal exceeds balance');
ELSIF :NEW.TransactionType='Deposit' AND :NEW.Amount<=0 THEN
    RAISE_APPLICATION_ERROR(-20005,'Deposit must be positive');
END IF;
END;
/